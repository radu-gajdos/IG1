     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  
     5                                  extern exit, printf, scanf, fopen, fclose, fprintf, fread    
     6                                  import exit msvcrt.dll    
     7                                  import printf msvcrt.dll
     8                                  import scanf msvcrt.dll 
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  
    14                                  
    15                                  global start        
    16                                  
    17                                  extern exit               
    18                                  import exit msvcrt.dll    
    19                                  
    20                                  segment data use32 class=data
    21                                  
    22 00000000 6162632E74787400            file_name db "abc.txt", 0   ; filename to be created
    23 00000008 7700                        access_mode db "w", 0       ; file access mode:; w - creates an empty filefor writing
    24 0000000A FFFFFFFF                    file_descriptor dd -1       ; variable to hold the file
    25                                      
    26 0000000E 00000000                    arr dd 0                      ; liste initializieren
    27 00000012 256400                      format db "%d", 0          ; format deci output
    28 00000015 257300                      format_text db "%s", 0          ; format deci output
    29 00000018 617272203D2000              message db "arr = ", 0        ; message input
    30 0000001F 256300                      blank db "%c",0
    31 00000022 03                          trei db 3
    32 00000023 00000000                    arr_nou dd 0
    33 00000027 00                          sem db 0
    34 00000028 4B65696E65205A6168-         message_no db "Keine Zahl"
    34 00000031 6C                 
    35                                      
    36                                  segment code use32 class=code
    37                                      start:
    38                                      
    39 00000000 68[08000000]                    push dword access_mode
    40 00000005 68[00000000]                    push dword file_name
    41 0000000A FF15[00000000]                  call [fopen]
    42                                          ;file oeffnen
    43 00000010 83C408                          add esp, 4*2 ;Stack waschen
    44                                          
    45 00000013 A3[0A000000]                    mov [file_descriptor], eax ; store the filedescriptor returned by fopen
    46 00000018 83F800                          cmp eax, 0
    47 0000001B 7478                            je final                   ;wenn dem file nicht korrekt gebildet oder geoeffnet war -> final
    48                                          
    49 0000001D B900000000                      mov ecx,0
    50 00000022 68[18000000]                    push dword message
    51 00000027 FF15[00000000]                  call [printf]
    52 0000002D 83C404                          add esp, 4*1
    53                                          
    54                                          repeta:
    55                                              
    56 00000030 68[0E000000]                        push dword arr
    57 00000035 68[12000000]                        push dword format
    58 0000003A FF15[00000000]                      call [scanf]
    59 00000040 83C408                              add esp, 4*2
    60                                              
    61                                              
    62                                              ; in arr Zahl im hex tun
    63 00000043 8B1D[0E000000]                      mov ebx,[arr]
    64 00000049 83FB00                              cmp ebx,0
    65 0000004C 7447                                je final
    66                                              ;bei 0 stoppen
    67                                              
    68                                              
    69 0000004E A1[0E000000]                        mov eax,[arr]
    70 00000053 F635[22000000]                      div byte [trei]
    71 00000059 80FC00                              cmp ah,0
    72 0000005C 75D2                                jne repeta
    73                                              
    74 0000005E 89D8                                mov eax,ebx
    75 00000060 B600                                mov dh,0
    76 00000062 B201                                mov dl,1
    77                                              div_trei:
    78                                              
    79 00000064 B901000000                          mov ecx,1
    80 00000069 890D[27000000]                      mov [sem],ecx
    81                                              
    82 0000006F 53                                  push dword ebx
    83 00000070 68[12000000]                        push dword format
    84 00000075 FF15[00000000]                      call [printf]
    85 0000007B 83C408                              add esp, 4*2
    86                                              
    87 0000007E 53                                  push dword ebx
    88 0000007F 68[12000000]                        push dword format
    89 00000084 FF35[0A000000]                      push dword [file_descriptor]
    90 0000008A FF15[00000000]                      call [fprintf]
    91 00000090 83C408                              add esp, 4*2
    92                                              
    93 00000093 EB9B                                jmp repeta
    94                                  
    95                                          final:
    96                                          
    97                                          
    98 00000095 68[28000000]                    push dword message_no
    99 0000009A FF15[00000000]                  call [printf]
   100 000000A0 83C408                          add esp, 4*2
   101                                          
   102                                      
   103                                          gata:
   104                                      ; exit(0)
   105 000000A3 6A00                        push    dword 0      ; push the parameter for exit onto the stack
   106 000000A5 FF15[00000000]              call    [exit]       ; call exit to terminate the program
